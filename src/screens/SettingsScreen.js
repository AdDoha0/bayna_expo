import React, { useState, useRef } from 'react';
import {
  View,
  ScrollView,
  StyleSheet,
  Platform,
  Alert,
  Animated,
} from 'react-native';
import {
  Text,
  Surface,
  useTheme,
  Card,
  Switch,
  Button,
  Divider,
  IconButton,
  List,
} from 'react-native-paper';
import AnimatedHeader from '../components/AnimatedHeader';

export default function SettingsScreen() {
  const theme = useTheme();
  const scrollY = useRef(new Animated.Value(0)).current;
  const [settings, setSettings] = useState({
    notifications: true,
    soundEffects: true,
    autoTranscription: false,
    dailyReminder: true,
    darkTheme: false,
    arabicFont: 'standard',
  });

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º AnimatedHeader –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  const { headerComponent, contentPaddingTop } = AnimatedHeader({
    scrollY,
    arabicTitle: 'ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™',
    title: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    subtitle: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ –∞—Ä–∞–±—Å–∫–æ–º—É —è–∑—ã–∫—É',
  });

  const toggleSetting = (key) => {
    setSettings(prev => ({
      ...prev,
      [key]: !prev[key]
    }));
  };

  const showInfo = (title, message) => {
    Alert.alert(title, message, [{ text: 'OK' }]);
  };

  const resetProgress = () => {
    Alert.alert(
      '–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { text: '–°–±—Ä–æ—Å–∏—Ç—å', style: 'destructive', onPress: () => {
          // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
          Alert.alert('–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω', '–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.');
        }}
      ]
    );
  };

  const exportData = () => {
    Alert.alert(
      '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö',
      '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { text: '–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å', onPress: () => {
          // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
          Alert.alert('–£—Å–ø–µ—à–Ω–æ', '–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª exports/backup.json');
        }}
      ]
    );
  };

  const renderSettingItem = (title, subtitle, value, onToggle, icon) => (
    <List.Item
      title={title}
      description={subtitle}
      left={(props) => <List.Icon {...props} icon={icon} color={theme.colors.primary} />}
      right={() => (
        <Switch
          value={value}
          onValueChange={onToggle}
          color={theme.colors.primary}
        />
      )}
      style={styles.settingItem}
      titleStyle={styles.settingTitle}
      descriptionStyle={styles.settingDescription}
    />
  );

  const renderActionItem = (title, subtitle, onPress, icon, iconColor) => (
    <List.Item
      title={title}
      description={subtitle}
      left={(props) => <List.Icon {...props} icon={icon} color={iconColor || theme.colors.primary} />}
      right={() => (
        <IconButton
          icon="chevron-right"
          size={20}
          iconColor={theme.colors.outline}
        />
      )}
      onPress={onPress}
      style={styles.settingItem}
      titleStyle={styles.settingTitle}
      descriptionStyle={styles.settingDescription}
    />
  );

  return (
    <View style={styles.container}>
      {headerComponent}

      <ScrollView
        style={styles.scrollContainer}
        contentContainerStyle={[styles.scrollContent, { paddingTop: contentPaddingTop }]}
        showsVerticalScrollIndicator={Platform.OS !== 'web'}
        onScroll={Animated.event(
          [{ nativeEvent: { contentOffset: { y: scrollY } } }],
          { useNativeDriver: false },
        )}
        scrollEventThrottle={16}
      >
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <Card style={styles.settingsCard} mode="elevated" elevation={3}>
          <Card.Content style={styles.cardContent}>
            <Text variant="titleLarge" style={styles.sectionTitle}>
              üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∑–≤—É–∫–∏
            </Text>
            
            {renderSettingItem(
              'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
              '–ü–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –∏–∑—É—á–µ–Ω–∏–∏',
              settings.notifications,
              () => toggleSetting('notifications'),
              'bell'
            )}
            
            <Divider style={styles.divider} />
            
            {renderSettingItem(
              '–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã',
              '–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∑–≤—É–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
              settings.soundEffects,
              () => toggleSetting('soundEffects'),
              'volume-high'
            )}
            
            <Divider style={styles.divider} />
            
            {renderSettingItem(
              '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è',
              '–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –∑–∞–Ω—è—Ç–∏—è—Ö –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
              settings.dailyReminder,
              () => toggleSetting('dailyReminder'),
              'calendar-clock'
            )}
          </Card.Content>
        </Card>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—É—á–µ–Ω–∏—è */}
        <Card style={styles.settingsCard} mode="elevated" elevation={3}>
          <Card.Content style={styles.cardContent}>
            <Text variant="titleLarge" style={styles.sectionTitle}>
              üìö –û–±—É—á–µ–Ω–∏–µ
            </Text>
            
            {renderSettingItem(
              '–ê–≤—Ç–æ–ø–æ–∫–∞–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏',
              '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
              settings.autoTranscription,
              () => toggleSetting('autoTranscription'),
              'text'
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–†–∞–∑–º–µ—Ä –∞—Ä–∞–±—Å–∫–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞',
              '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞—Ä–∞–±—Å–∫–æ–º',
              () => showInfo('–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏'),
              'format-size',
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–°–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è',
              '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∞—É–¥–∏–æ',
              () => showInfo('–°–∫–æ—Ä–æ—Å—Ç—å –∞—É–¥–∏–æ', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏'),
              'speedometer',
            )}
          </Card.Content>
        </Card>

        {/* –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ */}
        <Card style={styles.settingsCard} mode="elevated" elevation={3}>
          <Card.Content style={styles.cardContent}>
            <Text variant="titleLarge" style={styles.sectionTitle}>
              üé® –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
            </Text>
            
            {renderSettingItem(
              '–¢—ë–º–Ω–∞—è —Ç–µ–º–∞',
              '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—ë–º–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ',
              settings.darkTheme,
              () => toggleSetting('darkTheme'),
              'weather-night'
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
              '–†—É—Å—Å–∫–∏–π',
              () => showInfo('–Ø–∑—ã–∫', '–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫'),
              'translate',
            )}
          </Card.Content>
        </Card>

        {/* –î–∞–Ω–Ω—ã–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ */}
        <Card style={styles.settingsCard} mode="elevated" elevation={3}>
          <Card.Content style={styles.cardContent}>
            <Text variant="titleLarge" style={styles.sectionTitle}>
              üíæ –î–∞–Ω–Ω—ã–µ
            </Text>
            
            {renderActionItem(
              '–≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
              '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª',
              exportData,
              'download',
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
              '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è',
              resetProgress,
              'delete-forever',
              '#EF4444'
            )}
          </Card.Content>
        </Card>

        {/* –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ */}
        <Card style={styles.settingsCard} mode="elevated" elevation={3}>
          <Card.Content style={styles.cardContent}>
            <Text variant="titleLarge" style={styles.sectionTitle}>
              ‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            </Text>
            
            {renderActionItem(
              '–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
              '1.0.0',
              () => showInfo('–í–µ—Ä—Å–∏—è', '–ë–∞–π–Ω–∞ –Ø–¥–∞–π–∫ v1.0.0\n–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞—Ä–∞–±—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'),
              'information',
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
              '–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ',
              () => showInfo('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ support@bayna-yadayk.com'),
              'message-text',
            )}
            
            <Divider style={styles.divider} />
            
            {renderActionItem(
              '–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
              '–ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
              () => showInfo('–û—Ü–µ–Ω–∫–∞', '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è! –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞ –¥–ª—è –Ω–∞—Å.'),
              'star',
            )}
          </Card.Content>
        </Card>

        <View style={styles.footer}>
          <Text variant="bodyMedium" style={styles.footerText}>
            ÿ®ŸäŸÜ ŸäÿØŸäŸÉ - –ë–∞–π–Ω–∞ –Ø–¥–∞–π–∫
          </Text>
          <Text variant="bodySmall" style={styles.footerSubtext}>
            –ò–∑—É—á–µ–Ω–∏–µ –∞—Ä–∞–±—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ
          </Text>
        </View>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8FAFC',
    paddingBottom: Platform.OS === 'web' ? 0 : 70, // –û—Ç—Å—Ç—É–ø –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
  },
  scrollContainer: {
    flex: 1,
  },
  scrollContent: {
    padding: 20,
    paddingTop: 0, // –¢–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–Ω–∏–º–∞—Ü–∏–µ–π
    paddingBottom: 40,
  },
  settingsCard: {
    borderRadius: 20,
    backgroundColor: '#FFFFFF',
    marginBottom: 20,
    shadowColor: '#6366F1',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
  },
  cardContent: {
    padding: 0,
  },
  sectionTitle: {
    fontWeight: '700',
    color: '#1E293B',
    padding: 20,
    paddingBottom: 16,
  },
  settingItem: {
    paddingHorizontal: 20,
    paddingVertical: 12,
  },
  settingTitle: {
    fontWeight: '600',
    color: '#374151',
  },
  settingDescription: {
    color: '#6B7280',
    fontSize: 14,
  },
  divider: {
    marginHorizontal: 20,
    backgroundColor: '#F3F4F6',
  },
  footer: {
    alignItems: 'center',
    paddingVertical: 24,
    marginTop: 20,
  },
  footerText: {
    fontWeight: '700',
    color: '#4338CA',
    marginBottom: 4,
    textAlign: 'center',
  },
  footerSubtext: {
    color: '#6B7280',
    textAlign: 'center',
  },
}); 