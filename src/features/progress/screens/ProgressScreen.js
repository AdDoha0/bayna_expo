import React, { useRef } from 'react';
import { View, StyleSheet, Animated } from 'react-native';
import { Text, Card as PaperCard } from 'react-native-paper';
import { Screen, AnimatedHeader, Card } from '../../../shared/components';
import { StatCard, AchievementCard, ProgressChart, WeeklyChart } from '../components';
import { StatsSection } from '../sections';

export function ProgressScreen() {
  const scrollY = useRef(new Animated.Value(0)).current;

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º AnimatedHeader –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  const { headerComponent, contentPaddingTop } = AnimatedHeader({
    scrollY,
    arabicTitle: 'ÿßŸÑÿ™ŸÇÿØŸÖ',
    title: 'üìà –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å',
    subtitle: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∞—Ä–∞–±—Å–∫–æ–≥–æ —è–∑—ã–∫–∞',
  });

  const progressData = {
    totalLessons: 6,
    completedLessons: 3,
    totalWords: 120,
    learnedWords: 45,
    studyStreak: 7,
    totalStudyTime: 125, // –≤ –º–∏–Ω—É—Ç–∞—Ö
  };

  const achievements = [
    { id: 1, title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', description: '–ó–∞–≤–µ—Ä—à–µ–Ω –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫', icon: 'üéØ', completed: true },
    { id: 2, title: '–ó–Ω–∞—Ç–æ–∫ —Å–ª–æ–≤', description: '–ò–∑—É—á–µ–Ω–æ 50 —Å–ª–æ–≤', icon: 'üìö', completed: false },
    { id: 3, title: '–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ', description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', icon: 'üî•', completed: true },
    { id: 4, title: '–ú–∞—Å—Ç–µ—Ä –¥–∏–∞–ª–æ–≥–æ–≤', description: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ 5 –¥–∏–∞–ª–æ–≥–æ–≤', icon: 'üí¨', completed: false },
  ];

  const weeklyProgress = [
    { day: '–ü–Ω', minutes: 25 },
    { day: '–í—Ç', minutes: 30 },
    { day: '–°—Ä', minutes: 15 },
    { day: '–ß—Ç', minutes: 20 },
    { day: '–ü—Ç', minutes: 35 },
    { day: '–°–±', minutes: 0 },
    { day: '–í—Å', minutes: 0 },
  ];

  const progressPercentage = (progressData.completedLessons / progressData.totalLessons) * 100;

  return (
    <Screen>
      {headerComponent}

      <Animated.ScrollView
        style={styles.scrollContainer}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
        onScroll={Animated.event([{ nativeEvent: { contentOffset: { y: scrollY } } }], { useNativeDriver: false })}
        scrollEventThrottle={16}
      >
        <Animated.View style={{ paddingTop: contentPaddingTop }}>
        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <StatsSection progressData={progressData} />

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã */}
        <ProgressChart progressData={progressData} />

        {/* –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
        <WeeklyChart weeklyProgress={weeklyProgress} />

        {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
        <Card style={styles.achievementsCard} elevation={3}>
          <PaperCard.Content style={styles.achievementsContent}>
            <Text variant="titleLarge" style={styles.achievementsTitle}>
              üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            </Text>
            <View style={styles.achievementsList}>
              {achievements.map(achievement => (
                <AchievementCard key={achievement.id} achievement={achievement} />
              ))}
            </View>
          </PaperCard.Content>
        </Card>
        </Animated.View>
      </Animated.ScrollView>
    </Screen>
  );
}

const styles = StyleSheet.create({
  scrollContainer: {
    flex: 1,
  },
  scrollContent: {
    padding: 20,
    paddingTop: 0, // –¢–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–Ω–∏–º–∞—Ü–∏–µ–π
    paddingBottom: 40,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 16,
    marginBottom: 20,
  },
  achievementsCard: {
    borderRadius: 20,
    backgroundColor: '#FFFFFF',
  },
  achievementsContent: {
    padding: 20,
  },
  achievementsTitle: {
    fontWeight: '700',
    color: '#1E293B',
    marginBottom: 20,
    textAlign: 'center',
  },
  achievementsList: {
    gap: 12,
  },
});

